@page "/category"
@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager

<div class="row mt-4">
    <div class="col-6 py-2">
        <h4 class="card-title text-primary">Category List</h4>
    </div>
    <div class="col-4 offset-2">
        <a href="category/create" class="btn btn-primary form-control">Add New Category
        </a> 
    </div>
    <div class="col-12">
        @if(Categories.Any())
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Actions</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach(var obj in Categories){
                    <tr>
                        <td>
                            @obj.Name
                        </td>
                        <td>
                        <NavLink href="" class="btn btn-primary">Edit</NavLink>
                               <NavLink href="" class="btn btn-danger">Delete</NavLink>
                            </td>
                    </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            if (IsLoading)
            {
                //loading git
                <div class="text-center">
                    <img src="/images/loading.gif" />
                </div>
            }
            else
            {
                //no records
                <p>No Records Found.</p>
            }
        }
    </div>
</div>

@code {
    private IEnumerable<CategoryDTO> Categories { get; set; } = new List<CategoryDTO>();

    private bool IsLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        //this method(oninitialzedAsync) is used to display loading GIF when we face the delay while loading category list
        await Task.Run(LoadCategories);
    }

    private void LoadCategories()
    {
        Categories = _categoryRepository.GetAll();
        IsLoading = false;

    }
}
