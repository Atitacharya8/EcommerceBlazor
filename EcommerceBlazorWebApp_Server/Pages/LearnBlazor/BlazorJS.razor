@page "/learnblazor/blazorjs"
@inject IJSRuntime _JsRuntime;

<h3>BlazorJS</h3>

<div class="row">
    <button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>

<div class="row">
    <button class="btn btn-success" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger" @onclick="ToastrError">Toastr Failure</button>
</div>


<div>
    @if (ConfirmResult)
    {
        <p>Confirmation has been made!</p>
    }
    else
    {
        <p>
            Confirmation pending!
        </p>
    }
</div>

@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);

     }

     //for toastr we don't have to return anything, wo we use invokevoidasync

    private async Task ToastrSuccess()
    {
        await _JsRuntime.InvokeVoidAsync("ShowToastr", "success", "Success");

    }

    private async Task ToastrError()
    {
       await _JsRuntime.InvokeVoidAsync("ShowToastr", "error", "Error");

    }
}
